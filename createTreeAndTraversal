#include <stdio.h>
#include <stdlib.h>

struct node {
    int ele;
    struct node *lptr;
    struct node *rptr;
};

// to create a new node
struct node* createNode() {
    int x;
    struct node *newnode;
    newnode = (struct node*) malloc(sizeof(struct node));
    printf("Enter data (-1 for no node): ");
    scanf("%d", &x);
    if (x == -1)  return 0;
    newnode->ele = x;
    printf("Enter left child of %d: ", x);
    newnode->lptr = createNode();
    printf("Enter right child of %d: ", x);
    newnode->rptr = createNode();
    return newnode;
}

void inorder(struct node *root) {
    if (root == NULL) return;
    inorder(root->lptr);
    printf("%d ", root->ele);
    inorder(root->rptr);
}

void preorder(struct node *root) {
    if (root == NULL) return;
    printf("%d ", root->ele);
    preorder(root->lptr);
    preorder(root->rptr);
}

void postorder(struct node *root) {
    if (root == NULL) return;
    postorder(root->lptr);
    postorder(root->rptr);
    printf("%d ", root->ele);
}

int main() {
    struct node* root;
    root = createNode();
    
    printf("\nIn-order Traversal: ");
    inorder(root);
    printf("\n");
    
    printf("Pre-order Traversal: ");
    preorder(root);
    printf("\n");
    
    printf("Post-order Traversal: ");
    postorder(root);
    printf("\n");
    
    return 0;
}
